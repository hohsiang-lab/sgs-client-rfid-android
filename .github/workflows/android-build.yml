name: Android CI/CD

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Create libs directory if not exists
      run: mkdir -p app/libs
      
    - name: List project structure
      run: |
        echo "Project structure:"
        find . -type f -name "*.gradle*" -o -name "*.xml" -o -name "*.java" | head -20
        
    - name: Build debug APK
      run: ./gradlew assembleDebug --stacktrace
      
    - name: Build release APK
      run: ./gradlew assembleRelease --stacktrace
      
    - name: Run tests
      run: ./gradlew test --stacktrace
      
    - name: Upload debug APK
      uses: actions/upload-artifact@v3
      with:
        name: debug-apk
        path: app/build/outputs/apk/debug/*.apk
        
    - name: Upload release APK
      uses: actions/upload-artifact@v3
      with:
        name: release-apk
        path: app/build/outputs/apk/release/*.apk
        
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: app/build/test-results/**/*.xml

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Create libs directory if not exists
      run: mkdir -p app/libs
      
    - name: Build release APK
      run: ./gradlew assembleRelease --stacktrace
      
    - name: Sign APK (optional)
      # Uncomment and configure if you have signing keys
      # run: |
      #   echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > keystore.jks
      #   ./gradlew assembleRelease \
      #     -Pandroid.injected.signing.store.file=../keystore.jks \
      #     -Pandroid.injected.signing.store.password="${{ secrets.KEYSTORE_PASSWORD }}" \
      #     -Pandroid.injected.signing.key.alias="${{ secrets.KEY_ALIAS }}" \
      #     -Pandroid.injected.signing.key.password="${{ secrets.KEY_PASSWORD }}"
      
    - name: Upload release APK to GitHub Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: app/build/outputs/apk/release/app-release.apk
        asset_name: rfid-reader-${{ github.event.release.tag_name }}.apk
        asset_content_type: application/vnd.android.package-archive